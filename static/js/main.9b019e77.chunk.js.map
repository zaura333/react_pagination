{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","i","push","String","onFirstPage","onLastPage","Number","at","className","cn","disabled","href","onClick","map","page","items","from","to","numbers","n","getNumbers","App","useState","itemsPer","setItemsPer","activePage","setActivePage","visibleItems","setVisibleItems","useEffect","firstItem","nextPageItem","slice","firstVisibleIndex","indexOf","lastVisibleIndex","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAAwB,SAAC,GAMpC,IAJK,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QACH,IADYC,mBACZ,MAD0B,EAC1B,EAD6BC,EAC7B,EAD6BA,aAE3BC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQ,GAELC,EAAI,EAAGA,GAAKJ,EAAeI,GAAK,EACvCD,EAAME,KAAKC,OAAOF,IAGpB,IAAMG,EAA8B,IAAhBT,EACdU,EAAaV,IAAgBW,OAAON,EAAMO,IAAI,IAEpD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUN,IAA3C,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,WACFR,GACHR,EAAaD,EAAc,IAPjC,oBAcDK,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAeN,UAAS,oBAAeF,OAAOQ,KAAUnB,EAAc,SAAW,IAAjF,SACE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMhB,GAAckB,IAJ/B,SAMGA,KAPIA,MAWX,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,WACFP,GACHT,EAAaD,EAAc,IAPjC,wBC/CFoB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBP,KAAI,SAAAM,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAEIJ,mBAAmB,IAFvB,mBACEK,EADF,KACgBC,EADhB,KAIAC,qBAAU,WACR,IAAMC,EAAYP,GAAYE,EAAa,GACrCM,EAAeD,EAAYP,EAEjCK,EAAgBb,EAAMiB,MAAMF,EAAWC,MACtC,CAACR,EAAUE,IAEd,IASMQ,EAAoBlB,EAAMmB,QAAQP,EAAa,IAAM,EACrDQ,EAAmBpB,EACtBmB,QAAQP,EAAaA,EAAaS,OAAS,IAAM,EAEpD,OACE,mCACE,sBAAK5B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBACgCQ,EADhC,cACuDE,EADvD,eAC8EpB,EAAMqB,OADpF,OAIA,sBAAK5B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOf,EACPgB,SA7BS,SAACC,GACpBhB,GAAagB,EAAMC,OAAOH,OAC1BZ,EAAc,IAsBN,UAOE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEf,MAAOsB,EAAMqB,OACb1C,QAAS6B,EACT5B,YAAa8B,EACb7B,aAzCiB,SAACkB,GACxBY,EAAcZ,MA0CV,6BACGa,EAAad,KAAI,SAAA8B,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cErE5DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9b019e77.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total, perPage, currentPage = 1, onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    pages.push(String(i));\n  }\n\n  const onFirstPage = currentPage === 1;\n  const onLastPage = currentPage === Number(pages.at(-1));\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: onFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={onFirstPage}\n          onClick={() => {\n            if (!onFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li key={page} className={`page-item ${Number(page) === currentPage ? 'active' : ''}`}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(+page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: onLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={onLastPage}\n          onClick={() => {\n            if (!onLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPer, setItemsPer] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n  const [\n    visibleItems, setVisibleItems,\n  ] = useState<string[]>([]);\n\n  useEffect(() => {\n    const firstItem = itemsPer * (activePage - 1);\n    const nextPageItem = firstItem + itemsPer;\n\n    setVisibleItems(items.slice(firstItem, nextPageItem));\n  }, [itemsPer, activePage]);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPer(+event.target.value);\n    setActivePage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setActivePage(page);\n  };\n\n  const firstVisibleIndex = items.indexOf(visibleItems[0]) + 1;\n  const lastVisibleIndex = items\n    .indexOf(visibleItems[visibleItems.length - 1]) + 1;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${activePage} (items ${firstVisibleIndex} - ${lastVisibleIndex} of ${items.length})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={itemsPer}\n              onChange={handleSelect}\n            >\n              <option value=\"3\">3</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n        <Pagination\n          total={items.length}\n          perPage={itemsPer}\n          currentPage={activePage}\n          onPageChange={handlePageChange}\n        />\n        <ul>\n          {visibleItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n        </ul>\n      </div>\n\n    </>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}