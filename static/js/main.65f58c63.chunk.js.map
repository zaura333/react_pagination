{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","Array","from","length","_","i","isFirstPage","isLastPage","Number","at","className","cn","disabled","href","onClick","map","page","items","to","numbers","n","push","getNumbers","itemsPerPageOptions","App","useState","itemsPer","setItemsPer","activePage","setActivePage","visibleItems","setVisibleItems","useEffect","firstItem","nextPageItem","slice","firstVisibleIndex","indexOf","lastVisibleIndex","id","value","onChange","event","target","item","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAAwB,SAAC,GAE/B,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QACH,IADYC,mBACZ,MAD0B,EAC1B,EAD6BC,EAC7B,EAD6BA,aAE3BC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAE5DC,EAA8B,IAAhBX,EACdY,EAAaZ,IAAgBa,OAAOR,EAAMS,IAAI,IAcpD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUN,IAA3C,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QApBW,WACZR,GACHV,EAAaD,EAAc,IAazB,oBAUDK,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAeN,UAAS,oBAAeF,OAAOQ,KAAUrB,EAAc,SAAW,IAAjF,SACE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMlB,EAAaY,OAAOQ,KAJrC,SAMGA,KAPIA,MAWX,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QArCW,WACZP,GACHX,EAAaD,EAAc,IA8BzB,wBCnDFsB,ECNC,SAAoBf,EAAcgB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIlB,EAAMkB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEdG,EAAsB,CAAC,IAAK,IAAK,KAAM,MAEhCC,EAAgB,WAC3B,MAAgCC,mBAASF,EAAoB,IAA7D,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAEIJ,mBAAmB,IAFvB,mBACEK,EADF,KACgBC,EADhB,KAIAC,qBAAU,WACR,IAAMC,EAAYzB,OAAOkB,IAAaE,EAAa,GAC7CM,EAAeD,EAAYzB,OAAOkB,GAExCK,EAAgBd,EAAMkB,MAAMF,EAAWzB,OAAO0B,OAC7C,CAACR,EAAUE,IAEd,IASMQ,EAAoBnB,EAAMoB,QAAQP,EAAa,IAAM,EACrDQ,EAAmBrB,EACtBoB,QAAQP,EAAaA,EAAa3B,OAAS,IAAM,EAEpD,OACE,mCACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EADX,mBACgCQ,EADhC,cACuDE,EADvD,eAC8ErB,EAAMd,OADpF,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOd,EACPe,SA7BS,SAACC,GACpBf,EAAYe,EAAMC,OAAOH,OACzBX,EAAc,IAsBN,SAOGN,EAAoBR,KAAI,SAAC6B,GAAD,OACvB,wBAAQJ,MAAOI,EAAf,SAAsBA,WAK5B,uBAAOC,QAAQ,kBAAkBnC,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEjB,MAAOwB,EAAMd,OACbT,QAASc,OAAOkB,GAChB/B,YAAaiC,EACbhC,aAxCiB,SAACoB,GACxBa,EAAcb,MAyCV,6BACGc,EAAaf,KAAI,SAAA6B,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cEtE5DE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.65f58c63.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total, perPage, currentPage = 1, onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: numberOfPages }, (_, i) => i + 1);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === Number(pages.at(-1));\n\n  const handlePrev = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li key={page} className={`page-item ${Number(page) === currentPage ? 'active' : ''}`}>\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(Number(page))}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst itemsPerPageOptions = ['3', '5', '10', '20'];\n\nexport const App: React.FC = () => {\n  const [itemsPer, setItemsPer] = useState(itemsPerPageOptions[1]);\n  const [activePage, setActivePage] = useState(1);\n  const [\n    visibleItems, setVisibleItems,\n  ] = useState<string[]>([]);\n\n  useEffect(() => {\n    const firstItem = Number(itemsPer) * (activePage - 1);\n    const nextPageItem = firstItem + Number(itemsPer);\n\n    setVisibleItems(items.slice(firstItem, Number(nextPageItem)));\n  }, [itemsPer, activePage]);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPer(event.target.value);\n    setActivePage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setActivePage(page);\n  };\n\n  const firstVisibleIndex = items.indexOf(visibleItems[0]) + 1;\n  const lastVisibleIndex = items\n    .indexOf(visibleItems[visibleItems.length - 1]) + 1;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${activePage} (items ${firstVisibleIndex} - ${lastVisibleIndex} of ${items.length})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={itemsPer}\n              onChange={handleSelect}\n            >\n              {itemsPerPageOptions.map((item) => (\n                <option value={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n        <Pagination\n          total={items.length}\n          perPage={Number(itemsPer)}\n          currentPage={activePage}\n          onPageChange={handlePageChange}\n        />\n        <ul>\n          {visibleItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n        </ul>\n      </div>\n\n    </>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}